{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c1946094\\\\Documents\\\\urgent-care-app\\\\client\\\\src\\\\pages\\\\PatientsList.jsx\";\nimport React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport api from '../api';\nimport styled from 'styled-components';\nimport 'react-table/react-table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\npadding: 0 40px 40px 40px`;\n_c = Wrapper;\nconst Update = styled.div`\n    color: #ef9b0f;\n    cursor: pointer;\n`;\n_c2 = Update;\nconst Delete = styled.div`\n    color: #ff0000;\n    cursor: pointer;\n`;\n_c3 = Delete;\nexport function UpdatePatient(props) {\n  function updateUser(e) {\n    e.preventDefault(); //tells user that if event does not get handled, its default\n    //  action should not be taken as it normally should\n\n    /**\r\n     * window.location.href is the URL of the current page\r\n     */\n\n    window.location.href = `/patients/update/${props.id}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Update, {\n    onClick: updateUser,\n    children: \"Update\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_c4 = UpdatePatient;\nexport function DeletePatient(props) {\n  function deleteUser(e) {\n    e.preventDefault();\n\n    if (window.confirm(`Do You want to delete the user ${props.id} permanently?`)) {\n      api.deletePatientById(props.id);\n      window.location.reload();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Delete, {\n    onClick: deleteUser,\n    children: \"Delete\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_c5 = DeletePatient;\n\nclass PatientsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.setState({\n        isLoading: true\n      });\n      await api.getAllPatients().then(patients => {\n        this.setState({\n          patients: patients.data.data,\n          isLoading: false\n        });\n      });\n    };\n\n    this.state = {\n      patients: [],\n      columns: [],\n      isLoading: false\n    };\n  }\n\n  render() {\n    const {\n      patients,\n      isLoading\n    } = this.state;\n    console.log('TCL: PatientsList -> render -> patients', patients);\n    const columns = [{\n      Header: 'ID',\n      accessor: '_id',\n      filterable: true\n    }, {\n      Header: 'Name',\n      accessor: 'name',\n      filterable: true\n    }, {\n      Header: 'Dob',\n      accessor: 'dob',\n      filterable: true\n    }, {\n      Header: '',\n      accessor: '',\n      Cell: function (props) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(DeletePatient, {\n            id: props.original._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this);\n      }\n    }, {\n      Header: '',\n      accessor: '',\n      Cell: function (props) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(UpdatePatient, {\n            id: props.original._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this);\n      }\n    }];\n    let showTable = true;\n\n    if (!patients.length) {\n      showTable = false;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: showTable && /*#__PURE__*/_jsxDEV(ReactTable, {\n        data: patients,\n        columns: columns,\n        loading: isLoading,\n        defaultPageSize: 10,\n        showPageSizeOptions: true,\n        minRows: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PatientsList;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Update\");\n$RefreshReg$(_c3, \"Delete\");\n$RefreshReg$(_c4, \"UpdatePatient\");\n$RefreshReg$(_c5, \"DeletePatient\");","map":{"version":3,"sources":["C:/Users/c1946094/Documents/urgent-care-app/client/src/pages/PatientsList.jsx"],"names":["React","Component","ReactTable","api","styled","Wrapper","div","Update","Delete","UpdatePatient","props","updateUser","e","preventDefault","window","location","href","id","DeletePatient","deleteUser","confirm","deletePatientById","reload","PatientsList","constructor","componentDidMount","setState","isLoading","getAllPatients","then","patients","data","state","columns","render","console","log","Header","accessor","filterable","Cell","original","_id","showTable","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactTable from 'react-table'\r\nimport api from '../api'\r\n\r\n\r\nimport styled from 'styled-components'\r\n\r\nimport 'react-table/react-table.css'\r\n\r\n\r\nconst Wrapper = styled.div`\r\npadding: 0 40px 40px 40px`\r\n\r\nconst Update = styled.div`\r\n    color: #ef9b0f;\r\n    cursor: pointer;\r\n`\r\n\r\nconst Delete = styled.div`\r\n    color: #ff0000;\r\n    cursor: pointer;\r\n`\r\n\r\nexport function UpdatePatient (props) {\r\n\r\n    function updateUser(e) {\r\n        e.preventDefault() //tells user that if event does not get handled, its default\r\n        //  action should not be taken as it normally should\r\n\r\n       \r\n        /**\r\n         * window.location.href is the URL of the current page\r\n         */\r\n        window.location.href = `/patients/update/${props.id}` \r\n    }\r\n\r\n    return(\r\n        <Update onClick={updateUser}>Update</Update>\r\n    )\r\n}\r\n\r\n\r\nexport function DeletePatient (props) {\r\n\r\n    function deleteUser(e) {\r\n        e.preventDefault()\r\n\r\n        if (\r\n            window.confirm(\r\n                `Do You want to delete the user ${props.id} permanently?` ,\r\n            )\r\n        ) {\r\n            api.deletePatientById(props.id)\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Delete onClick={deleteUser}>Delete</Delete>            \r\n    )\r\n        \r\n}\r\n\r\n\r\n\r\nclass PatientsList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            patients: [],\r\n            columns: [],\r\n            isLoading: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        this.setState({ isLoading: true })\r\n\r\n        await api.getAllPatients().then(patients => {\r\n            this.setState({\r\n                patients: patients.data.data,\r\n                isLoading: false,\r\n            })\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const { patients, isLoading } = this.state\r\n        console.log('TCL: PatientsList -> render -> patients', patients)\r\n\r\n        const columns = [\r\n            {\r\n                Header: 'ID',\r\n                accessor: '_id',\r\n                filterable: true,\r\n            },\r\n            {\r\n                Header: 'Name',\r\n                accessor: 'name',\r\n                filterable: true,\r\n            },\r\n            {\r\n                Header: 'Dob',\r\n                accessor: 'dob',\r\n                filterable: true,\r\n            },\r\n            {\r\n                Header: '',\r\n                accessor: '',\r\n                Cell: function(props) {\r\n                    return (\r\n                        <span>\r\n                            <DeletePatient id={props.original._id} />\r\n                        </span>\r\n                    )\r\n                },\r\n            },\r\n            {\r\n                Header: '',\r\n                accessor: '',\r\n                Cell: function(props) {\r\n                    return (\r\n                        <span>\r\n                            <UpdatePatient id={props.original._id} />\r\n                        </span>\r\n                    )\r\n                },\r\n            },\r\n        ]\r\n\r\n        let showTable = true\r\n        if (!patients.length) {\r\n            showTable = false\r\n        }\r\n\r\n        return (\r\n            <Wrapper>\r\n                {showTable && (\r\n                    <ReactTable\r\n                        data={patients}\r\n                        columns={columns}\r\n                        loading={isLoading}\r\n                        defaultPageSize={10}\r\n                        showPageSizeOptions={true}\r\n                        minRows={0}\r\n                    />\r\n                )}\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PatientsList"]},"metadata":{},"sourceType":"module"}